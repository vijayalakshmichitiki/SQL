SELECT * FROM IMDB;

SELECT *FROM DIRECTORS;
 
-- 1.List all movies with their titles and ratings.
SELECT TITLE,RATING FROM IMDB;

-- 2.Retrieve all movies released after 2010.
SELECT * FROM IMDB WHERE RELEASE_YEAR>2010;

-- 3.Find the highest-rated movie.
SELECT * FROM IMDB ORDER BY RATING DESC LIMIT 1;

-- 4.Count the number of movies in each genre.
ALTER TABLE IMDB RENAME COLUMN ï»¿Movie_ID TO MOVIE_ID;
SELECT  COUNT(Movie_ID),GENRE FROM IMDB GROUP BY GENRE;

-- 5.Show movies with a duration greater than 150 minutes.
SELECT * FROM IMDB WHERE DURATION >150;

-- 6.Get the average revenue of all movies.
SELECT AVG(Revenue_Million) FROM IMDB;

-- 7.Retrieve all movies directed by Christopher Nolan.
ALTER TABLE  DIRECTORS RENAME  COLUMN ï»¿Director_ID TO Director_ID;
SELECT * FROM DIRECTORS AS D JOIN  IMDB AS I ON D.DIRECTOR_ID=I.DIRECTOR_ID WHERE DIRECTOR_NAME="CHRISTOPHER NOLAN";
SELECT DIRECTOR_NAME,TITLE FROM DIRECTORS AS D JOIN  IMDB AS I ON D.DIRECTOR_ID=I.DIRECTOR_ID WHERE DIRECTOR_NAME="CHRISTOPHER NOLAN";

-- 8.List movies in descending order of revenue.
SELECT * FROM IMDB ORDER BY Revenue_Million DESC;

-- 9.Find all unique genres available.
SELECT GENRE FROM IMDB GROUP BY GENRE;

-- 10.Display movies whose title starts with 'I'.
SELECT * FROM IMDB WHERE TITLE LIKE "I%";

-- 11.Join the Movies and Directors table to list each movie with its director's name.
SELECT TITLE,DIRECTOR_NAME FROM DIRECTORS JOIN IMDB ON DIRECTORS.DIRECTOR_ID=IMDB.DIRECTOR_ID GROUP BY DIRECTOR_NAME,TITLE;

-- 12.Show total revenue earned by each director.
SELECT SUM(REVENUE_MILLION),DIRECTOR_NAME FROM DIRECTORS AS D JOIN IMDB AS I ON D.DIRECTOR_ID=I.DIRECTOR_ID GROUP BY DIRECTOR_NAME;

-- 13.Count how many movies each director has made.
SELECT COUNT(Movie_ID),DIRECTOR_NAME FROM DIRECTORS AS D JOIN IMDB AS I ON D.DIRECTOR_ID=I.DIRECTOR_ID GROUP BY DIRECTOR_NAME;

-- 14.List directors who have directed more than one movie.
SELECT DIRECTOR_NAME FROM DIRECTORS AS D JOIN IMDB AS I ON D.DIRECTOR_ID=I.DIRECTOR_ID GROUP BY DIRECTOR_NAME HAVING COUNT(MOVIE_ID)>1;

-- 15.Use CASE to label movies as "Hit", "Average", or "Flop" based on revenue.
SELECT MOVIE_ID,TITLE,RATING, CASE WHEN REVENUE_MILLION >1500 THEN "HIT"
WHEN REVENUE_MILLION >=800 THEN "AVERAGE"
ELSE "FLOOP"
END AS  MOVIE_STATUS FROM IMDB;

-- 16.Use a window function to rank movies by revenue within each genre.
SELECT MOVIE_ID,TITLE,GENRE,REVENUE_MILLION,RANK() OVER(PARTITION BY GENRE ORDER BY REVENUE_MILLION DESC) AS RANKED FROM IMDB;

-- 17.Show movies that earned more than the average revenue of all movies.
SELECT TITLE,AVG(REVENUE_MILLION)  FROM IMDB  WHERE  ( SELECT AVG(REVENUE_MILLION) FROM IMDB )< REVENUE_MILLION GROUP BY TITLE;
SELECT AVG(REVENUE_MILLION) FROM IMDB;
SELECT TITLE,AVG(REVENUE_MILLION) FROM IMDB  WHERE  REVENUE_MILLION>1287.1125 GROUP BY TITLE;

-- 18.For each director, show their highest-grossing movie.
SELECT DIRECTOR_NAME,MAX(REVENUE_MILLION)  FROM DIRECTORS AS D JOIN IMDB AS I ON D.DIRECTOR_ID=I.DIRECTOR_ID GROUP BY D.DIRECTOR_NAME;

-- 19.Find the top 2 longest movies using ROW_NUMBER().
SELECT TITLE,DURATION FROM DIRECTORS AS D JOIN IMDB AS I ON D.DIRECTOR_ID=I.DIRECTOR_ID ORDER BY DURATION DESC LIMIT 2;
SELECT * FROM (SELECT TITLE,GENRE,DURATION,ROW_NUMBER() OVER (ORDER BY DURATION DESC) AS RANKING FROM IMDB) AS RANKED  WHERE RANKING <=2;

-- 20.List all directors along with the average rating of their movies
SELECT DIRECTOR_NAME,TITLE,AVG(RATING) FROM DIRECTORS AS D JOIN IMDB AS I ON D.DIRECTOR_ID=I.DIRECTOR_ID GROUP BY DIRECTOR_NAME,TITLE;
